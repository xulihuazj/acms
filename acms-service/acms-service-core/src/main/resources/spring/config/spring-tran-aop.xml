<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 用来定义那些类需要采用事物管理 spring 事物的动态代理类 BeanNameAutoProxyCreator 根据类名自动代理，接受表达式 -->
	<bean id="BeanProxy"
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames">
			<!-- 对类名以Service结尾的类进行代理 -->
			<list>
				<value>mcdsUnitService</value>
				<value>mcdsGathrService</value>
				<value>prodQueryService</value>
				<value>brandService</value>
				<value>partnerService</value>
				<value>prodManagerService</value>
				<value>mcdsInterfaceService</value>
				<value>mcdsService</value>
				<value>mrctService</value>
				<value>couponService</value>
			</list>
		</property>
		<!-- 对代理类进行加载拦截器(实现通知的过程) -->
		<property name="interceptorNames">
			<list>
				<value>transactionInterceptor</value>
			</list>
		</property>
	</bean>

	<!-- 定义拦截器，用来指定事物属性，级别，和异常处理 -->
	<bean id="transactionInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager"></property>
		<property name="transactionAttributes">
			<props>
				<!-- PROPAGATION_SUPPORTS: 如果已经存在事务,则加入事务;如果没有事务,则以非事务的方式执行; 
				PROPAGATION_MANDATORY:使用当前事务, 如果没有, 则抛出异常; 
				PROPAGATION_REQUIRED: 新建事务,如果当前有事务, 则挂起; 
				PROPAGATION_NOT_SUPPORTED:以非事务的方式执行,	如果当前有事务, 则挂起; 
				PROPAGATION_NEVER:以非事务的方式执行, 如果当前有事务,则抛出异常; 
				+/-Exception:    + 表示异常出现时事物提交 - 表示异常出现时事务回滚 -->
				<prop key="get*">PROPAGATION_SUPPORTS,readOnly,-Exception</prop>
				<prop key="query*">PROPAGATION_SUPPORTS,readOnly,-Exception</prop>
				<prop key="select*">PROPAGATION_SUPPORTS,readOnly,-Exception</prop>
				<prop key="del*"> PROPAGATION_SUPPORTS,-Exception</prop>
				<prop key="update*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="save*">PROPAGATION_REQUIRED,-Exception</prop>
				<prop key="insert*">PROPAGATION_REQUIRED,-Exception</prop>
			</props>
		</property>
	</bean>

	<!-- 由spring管理mybatis的事物 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
</beans>